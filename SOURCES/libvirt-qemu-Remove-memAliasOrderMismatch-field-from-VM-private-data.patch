From e0e6c7375855e09c45591d0b5ab23cddaa230ad8 Mon Sep 17 00:00:00 2001
Message-Id: <e0e6c7375855e09c45591d0b5ab23cddaa230ad8@dist-git>
From: Peter Krempa <pkrempa@redhat.com>
Date: Thu, 19 Jan 2023 15:18:45 +0100
Subject: [PATCH] qemu: Remove 'memAliasOrderMismatch' field from VM private
 data

The field is no longer used so we can remove it and the code filling it.

Signed-off-by: Peter Krempa <pkrempa@redhat.com>
Reviewed-by: Martin Kletzander <mkletzan@redhat.com>
(cherry picked from commit 5764930463eb8f450e45fa982651ef6b7a7afd7c)
Resolves: https://bugzilla.redhat.com/show_bug.cgi?id=2158701
---
 src/qemu/qemu_domain.h  |  3 ---
 src/qemu/qemu_process.c | 24 ------------------------
 2 files changed, 27 deletions(-)

diff --git a/src/qemu/qemu_domain.h b/src/qemu/qemu_domain.h
index 08430b67b9..eca5404cdc 100644
--- a/src/qemu/qemu_domain.h
+++ b/src/qemu/qemu_domain.h
@@ -177,9 +177,6 @@ struct _qemuDomainObjPrivate {
     uint8_t *masterKey;
     size_t masterKeyLen;
 
-    /* note whether memory device alias does not correspond to slot number */
-    bool memAliasOrderMismatch;
-
     /* for migrations using TLS with a secret (not to be saved in our */
     /* private XML). */
     qemuDomainSecretInfo *migSecinfo;
diff --git a/src/qemu/qemu_process.c b/src/qemu/qemu_process.c
index ee9f0784d3..29716ecb19 100644
--- a/src/qemu/qemu_process.c
+++ b/src/qemu/qemu_process.c
@@ -3896,28 +3896,6 @@ qemuDomainPerfRestart(virDomainObj *vm)
 }
 
 
-static void
-qemuProcessReconnectCheckMemAliasOrderMismatch(virDomainObj *vm)
-{
-    size_t i;
-    int aliasidx;
-    virDomainDef *def = vm->def;
-    qemuDomainObjPrivate *priv = vm->privateData;
-
-    if (!virDomainDefHasMemoryHotplug(def) || def->nmems == 0)
-        return;
-
-    for (i = 0; i < def->nmems; i++) {
-        aliasidx = qemuDomainDeviceAliasIndex(&def->mems[i]->info, "dimm");
-
-        if (def->mems[i]->info.addr.dimm.slot != aliasidx) {
-            priv->memAliasOrderMismatch = true;
-            break;
-        }
-    }
-}
-
-
 static bool
 qemuProcessDomainMemoryDefNeedHugepagesPath(const virDomainMemoryDef *mem,
                                             const long system_pagesize)
@@ -9091,8 +9069,6 @@ qemuProcessReconnect(void *opaque)
     if (qemuProcessRefreshFdsetIndex(obj) < 0)
         goto error;
 
-    qemuProcessReconnectCheckMemAliasOrderMismatch(obj);
-
     if (qemuConnectAgent(driver, obj) < 0)
         goto error;
 
-- 
2.39.1

