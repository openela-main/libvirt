From fe97fef2c789c1052b43f802459f87b32b2b6fad Mon Sep 17 00:00:00 2001
Message-ID: <fe97fef2c789c1052b43f802459f87b32b2b6fad.1708340442.git.jdenemar@redhat.com>
From: Peter Krempa <pkrempa@redhat.com>
Date: Wed, 24 Jan 2024 15:24:27 +0100
Subject: [PATCH] virPCIVPDResourceIsValidTextValue: Adjust comment to reflect
 actual code
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

The function does not reject '&', '<', '>' contrary to what it actually
states. Move and adjust the comment.

Signed-off-by: Peter Krempa <pkrempa@redhat.com>
Reviewed-by: JÃ¡n Tomko <jtomko@redhat.com>
(cherry picked from commit 42df6cc1b4acc40d05ff6bc8e85587e4faec6cac)

https://issues.redhat.com/browse/RHEL-22314 [9.4.0]
https://issues.redhat.com/browse/RHEL-22400 [9.3.z]
https://issues.redhat.com/browse/RHEL-22399 [9.2.z]
---
 src/util/virpcivpd.c | 12 ++++--------
 1 file changed, 4 insertions(+), 8 deletions(-)

diff --git a/src/util/virpcivpd.c b/src/util/virpcivpd.c
index 39557c7347..248a9b2790 100644
--- a/src/util/virpcivpd.c
+++ b/src/util/virpcivpd.c
@@ -167,19 +167,15 @@ virPCIVPDResourceGetFieldValueFormat(const char *keyword)
  * value or text field value. The expectations are based on the keywords specified
  * in relevant sections of PCI(e) specifications
  * ("I.3. VPD Definitions" in PCI specs, "6.28.1 VPD Format" PCIe 4.0).
+ *
+ * The PCI(e) specs mention alphanumeric characters when talking about text fields
+ * and the string resource but also include spaces and dashes in the provided example.
+ * Dots, commas, equal signs have also been observed in values used by major device vendors.
  */
 bool
 virPCIVPDResourceIsValidTextValue(const char *value)
 {
     size_t i = 0;
-    /*
-     * The PCI(e) specs mention alphanumeric characters when talking about text fields
-     * and the string resource but also include spaces and dashes in the provided example.
-     * Dots, commas, equal signs have also been observed in values used by major device vendors.
-     * The specs do not specify a full set of allowed code points and for Libvirt it is important
-     * to keep values in the ranges allowed within XML elements (mainly excluding less-than,
-     * greater-than and ampersand).
-     */
 
     if (value == NULL)
         return false;
-- 
2.43.2
